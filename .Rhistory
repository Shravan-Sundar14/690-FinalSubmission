# Frequency Distribution of meternal mortality rate
hist(data1$Maternal_mortality,
main = "Histogram of Maternal Mortality Rates",
xlab = "Maternal Mortality Rate",
ylab = "Frequency",
col = "skyblue",
border = "white",
breaks = 10)
top_20 <- data1 %>%
filter(Rank <= 20)
# Create a whisker plot for the top 20 ranks
ggplot(top_20, aes(x = Country, y = Seats_parliament)) +
geom_boxplot(fill = "skyblue", color = "black") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Country", y = "Female Members in Parliament (%)") +
ggtitle("Whisker Plot of Female Members in Parliament (Top 20 Ranks)")
top_20 <- data1 %>%
filter(Rank <= 20)
# Create a whisker plot for the top 20 ranks
ggplot(top_20, aes(x = Country, y = Seats_parliament)) +
geom_boxplot(fill = "skyblue", color = "black") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Country", y = "Female Members in Parliament (%)") +
ggtitle("Whisker Plot of Female Members in Parliament (Top 20 Ranks)")
# First Model
first_model_gdp <- lm(GII ~ GDP_Percapita + Region, data = data1)
summary(first_model_gdp)
summary(Second_model_gdp)
Second_model_gdp <- lm(GII ~ GDP_Percapita + Population, data = data1)
summary(Second_model_gdp)
Third_model_gdp <- lm(GII ~ GDP_Percapita + FHS, data = data1)
summary (Third_model_gdp)
model1 <- lm(GII~ GDP_Percapita, data = data1)
summary (model1)
model2 <- lm(GII ~ GDP_Percapita + Region, data = data1)
summary(model2)
model3 <- lm(GII ~ GDP_Percapita + Population, data = data1)
summary(model3)
summary (model4)
model5 <- lm(GII ~ GDP_Percapita + Country + Rank + FHS + Region + Population, data = data1)
summary(model5)
model5 <- lm(GII ~ GDP_Percapita +  Rank + FHS + Region + Population, data = data1)
model5 <- lm(GII ~ GDP_Percapita +Rank + FHS + Region + Population, data = data1)
summary(model5)
model5 <- lm(GII ~ GDP_Percapita  + FHS + Region + Population, data = data1)
model5 <- lm(GII ~ GDP_Percapita  + FHS + Region + Population, data = data1)
summary(model5)
stepwise_model <- stepAIC(model5, direction = "both")
library(MASS)
stepwise_model <- stepAIC(model5, direction = "both")
summary(stepwise_model)
plot(model5)
interaction_model <- lm(GII ~ GDP_Percapita * Region, data = data)
interaction_model <- lm(GII ~ GDP_Percapita * Region, data = data1)
interaction_model <- lm(GII ~ GDP_Percapita * Region, data = data1)
summary(interaction_model)
robustness_model <- lm(GII ~ Population, data = data1)
robustness_model <- lm(GII ~ Population, data = data1)
summary(robustness_model)
plot(robustness_model)
plot(summary(interaction_model))
(summary(interaction_model)
plot(interaction_model <- lm(GII ~ GDP_Percapita * Region, data = data1))
interaction_model <- lm(GII ~ GDP_Percapita * Region, data = data1)
library(ggplot2)
library(scales)
df1 <- read.csv("C:\\Users\\LENOVO\\Downloads\\690V Project.csv")
ggplot(df1, aes(x = Industry, y = Percentage)) +
geom_boxplot() +
labs(title = "Cat-num Plot",
x = "Industry",
y = "Percentage") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df1, aes(x = Company_Size_before_Layoffs, y = Money_Raised_in_mil)) +
geom_point() +
labs(title = "Num-num Plot",
x = "Company Size Before Layoffs",
y = "Money Raised")
ggplot(df1, aes(x = Company_Size_after_layoffs, y = Money_Raised_in_mil)) +
geom_point() +
labs(title = "Num-num Plot",
x = "Company Size after Layoffs",
y = "Money Raised")
Plot5
Plot5
Plot6 = ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = df1, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry", values = c("Consumer" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude") +
theme(legend.position = "right")
plot6
Plot6 = ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = df1, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry", values = c("Consumer" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude") +
theme(legend.position = "right")
plot6
Plot6
Plot6
Plot7 = ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = df1, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry", values = c("Consumer" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude") +
theme(legend.position = "right")
Plot7
Plot6 = ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = df1, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry", values = c("Consumer" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude") +
theme(legend.position = "right")
Plot6
saveRDS(Plot6,"Plot6.rds")
Plot7
Plot7 = ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = df1, aes(x = lng, y = lat, size = Money_Raised_in_mil, color = Continent), alpha = 0.7) +
scale_size_continuous(name = "Money Raised (in mil)", labels = scales::comma) +
scale_color_manual(name = "Continent", values = c("Asia" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Money Raised by Companies across Continents",
x = "Longitude", y = "Latitude") +
theme(legend.position = "right")
Plot7
saveRDS(Plot7,"Plot7.rds")
library(flexdashboard)
readRDS("Plot6.rds")
readRDS("Plot7.rds")
readRDS("Plot5.rds")
readRDS("Plot5.rds")
readRDS("Plot4.rds")
readRDS("Plot3.rds")
readRDS("Plot2.rds")
readRDS("draft1.rds")
data1 <- read.csv("C:\\Users\\LENOVO\\Downloads\\Gender_Inequality_Index.csv")
summary(data1)
data1 <- read.csv("C:\\Users\\LENOVO\\Downloads\\Gender_Inequality_Index.csv")
summary(data1)
library(dplyr)
glimpse(data1)
library(ggplot2)
# Scatterplot of GII vs. GDPP
ggplot(data1, aes(x = GII, y = GDP_Percapita)) +
geom_point() +
labs(x = "Gender Inequality Index (GII)", y = "GDPP") +
ggtitle("Scatterplot of GII vs. GDP Percapita")
# Frequency Distribution of meternal mortality rate
hist(data1$Maternal_mortality,
main = "Histogram of Maternal Mortality Rates",
xlab = "Maternal Mortality Rate",
ylab = "Frequency",
col = "skyblue",
border = "white",
breaks = 10)
model5 <- lm(GII ~ GDP_Percapita  + FHS + Region + Population + ethnic_fractionalization_score + unemployement_rate_percentage , data = data1)
summary(model5)
plot(model5)
model4 <- lm(GII ~ GDP_Percapita + FHS, data = data1)
summary (model4)
stepwise_model <- stepAIC(model5, direction = "both")
summary(stepwise_model)
interaction_model <- lm(GII ~ GDP_Percapita * Region, data = data1)
summary(interaction_model)
robustness_model <- lm(GII ~ Population, data = data1)
summary(robustness_model)
plot(robustness_model)
robustness_model <- lm(GDP_Percapita ~ GII, data = data1)
robustness_model <- lm(GDP_Percapita ~ GII, data = data1)
summary(robustness_model)
plot(robustness_model)
robustness_model <- lm(GDP_Percapita ~ GII, data = data1)
summary(robustness_model)
plot(robustness_model)
library(ggplot2)
# Scatterplot of GII vs. GDPP
ggplot(data1, aes(x = GII, y = log(GDP_Percapita)) +
geom_point() +
labs(x = "Gender Inequality Index (GII)", y = "GDPP") +
ggtitle("Scatterplot of GII vs. GDP Percapita")
library(ggplot2)
# Scatterplot of GII vs. GDPP
ggplot(data1, aes(x = GII, y = log(GDP_Percapita))) +
geom_point() +
labs(x = "Gender Inequality Index (GII)", y = "GDPP") +
ggtitle("Scatterplot of GII vs. GDP Percapita")
# Frequency Distribution of meternal mortality rate
hist(data1$GDP_Percaptia,
main = "Histogram of GDPPs",
xlab = "Maternal Mortality Rate",
ylab = "Frequency",
col = "skyblue",
border = "white",
breaks = 10)
# Frequency Distribution of meternal mortality rate
hist(data1$GDP_Percaptia,
main = "Histogram of GDPP",
xlab = "Maternal Mortality Rate",
ylab = "Frequency",
col = "skyblue",
border = "white",
breaks = 10)
# Frequency Distribution of meternal mortality rate
hist(data1$GDP_Percaptia,
main = "Histogram of GDPP",
xlab = "GDP Per Capita",
ylab = "Frequency",
col = "skyblue",
border = "white",
breaks = 10)
data1 <- read.csv("C:\\Users\\LENOVO\\Downloads\\Gender_Inequality_Index.csv")
# Frequency Distribution of meternal mortality rate
hist(data1$GDP_Percaptia,
main = "Histogram of GDPP",
xlab = "GDP Per Capita",
ylab = "Frequency",
col = "skyblue",
border = "white",
breaks = 10)
# Frequency Distribution of meternal mortality rate
hist(data1$log(GDP_Percaptia),
main = "Histogram of GDPP",
xlab = "GDP Per Capita",
ylab = "Frequency",
col = "skyblue",
border = "white",
breaks = 10)
# Frequency Distribution of meternal mortality rate
hist(GDP_Percaptia,
main = "Histogram of GDPP",
xlab = "GDP Per Capita",
ylab = "Frequency",
col = "skyblue",
border = "white",
breaks = 10)
data1 <- read.csv("C:\\Users\\LENOVO\\Downloads\\Gender_Inequality_Index.csv")
# Frequency Distribution of meternal mortality rate
hist(data1$GDP_Percaptia,
main = "Histogram of GDPP",
xlab = "GDP Per Capita",
ylab = "Frequency",
col = "skyblue",
border = "white",
breaks = 10)
# Frequency Distribution of meternal mortality rate
hist(data1$GDP_Percaptia,
main = "Histogram of GDP_Percapita",
xlab = "GDP Per Capita",
ylab = "Frequency",
col = "skyblue",
border = "white",
breaks = 10)
# Frequency Distribution of meternal mortality rate
hist(data1$GDP_Percaptia,
main = "Histogram of GDP_Percapita",
xlab = "GDP Per Capita",
ylab = "Frequency",
col = "skyblue",
border = "white",
breaks = 100)
# Frequency Distribution of meternal mortality rate
hist(data1$GDP_Percaptia)
# Frequency Distribution of
data1$GDP_Percapita <- as.numeric()
# Frequency Distribution of
data1$GDP_Percapita <- as.numeric(data1$GDP_Percapita)
# Frequency Distribution of
data1$GDP_Percapita <- as.numeric(data1$GDP_Percapita)
hist(data1$GDP_Percaptia)
ggplot(data1, aes(x=GDP_Percapita)) +
geom_histogram()
top_20 <- data1 %>%
filter(Rank <= 20)
# Create a whisker plot for the top 20 ranks
ggplot(top_20, aes(x = Country, y = Seats_parliament)) +
geom_boxplot(fill = "skyblue", color = "black") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Country", y = "Female Members in Parliament (%)") +
ggtitle("Whisker Plot of Female Members in Parliament (Top 20 Ranks)")
top_20 <- data1 %>%
filter(Rank <= 20)
# Create a whisker plot for the top 20 ranks
ggplot(top_20, aes(x = Country, y = GII)) +
geom_boxplot(fill = "skyblue", color = "black") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Country", y = "Female Members in Parliament (%)") +
ggtitle("Whisker Plot of Female Members in Parliament (Top 20 Ranks)")
data1$region <- relevel(data1$region, ref = "Europe")
library(dplyr)
summary(model2)
plot(model5)
plot(robustness_model)
plot(robustness_model)
data1 <- read.csv("C:\\Users\\LENOVO\\Downloads\\Gender_Inequality_Index.csv")
summary(data1)
library(dplyr)
glimpse(data1)
# Frequency Distribution of GDP Percapita
ggplot(data1, aes(x=GDP_Percapita)) +
geom_histogram()
Histogram and Scatter plot of variables such as GII & GDPP rates have been shown below
Histogram and Scatter plot of variables such as GII & GDPP rates have been shown below
library(stargazer)
data1 <- read.csv("C:\\Users\\LENOVO\\Downloads\\Gender_Inequality_Index.csv")
glimpse(data1)
library(dplyr)
summary(data1)
library(ggplot2)
# Scatterplot of GII vs. GDPP
ggplot(data1, aes(x = GII, y = log(GDP_Percapita))) +
geom_point() +
labs(x = "Gender Inequality Index (GII)", y = "GDPP") +
ggtitle("Scatterplot of GII vs. GDP Percapita")
# Frequency Distribution of GDP Percapita
ggplot(data1, aes(x=log(GDP_Percapita))) +
geom_histogram()
# Generate frequency table for the "Region" variable
region_counts <- table(data1$Region)
# Create pie chart
pie(region_counts, labels = names(region_counts), main = "Distribution of Regions")
model1A <- lm(GII~ GDP_Percapita, data = data1)
summary (model1A)
model1B <- lm(GII~ log(GDP_Percapita), data = data1)
summary (model1B)
data1$Region <- factor(data1$Region)
data1$Region <- relevel(data1$Region, ref = "Europe")
model2A <- lm(GII ~ GDP_Percapita + Region, data = data1)
summary(model2A)
model2B <- lm(GII ~ log(GDP_Percapita) + Region, data = data1)
summary(model2B)
model3A <- lm(GII ~ GDP_Percapita + Population, data = data1)
summary(model3A)
model3B <- lm(GII ~ log(GDP_Percapita) + Population, data = data1)
summary(model3B)
model4A <- lm(GII ~ GDP_Percapita + FHS, data = data1)
summary (model4A)
model4B <- lm(GII ~ log(GDP_Percapita) + FHS, data = data1)
summary (model4B)
model5A <- lm(GII ~ GDP_Percapita + ethnic_fractionalization_score , data = data1)
summary (model5A)
model6A <- lm(GII ~ GDP_Percapita + unemployement_rate_percentage , data = data1)
summary (model6A)
model6b <- lm(GII ~ log(GDP_Percapita) + unemployement_rate_percentage , data = data1)
summary (model6b)
model7 <- lm(GII ~ log(GDP_Percapita)  + FHS + Region + Population + ethnic_fractionalization_score + unemployement_rate_percentage , data = data1)
summary(model7)
plot(model7)
model7B <- lm(GII ~ GDP_Percapita  + FHS + Region + Population + ethnic_fractionalization_score + unemployement_rate_percentage , data = data1)
summary(model7B)
plot(model7B)
library(MASS)
stepwise_model <- stepAIC(model7, direction = "both")
summary(stepwise_model)
library(stargazer)
stargazer(model7, model7B, type = "text")
# Side-by-side comparison of all Log models
stargazer(model1A, model1B, model2A, model2B, model3B, model4B, model5B, model6B, model7,type = "text", title = "Regression Results")
# Side-by-side comparison of all Log models
stargazer(model1A, model1B, model2A, model2B, model3B, model4B, model5B, model6B, model7,type = "text")
# Side-by-side comparison of all Log models
stargazer(model1A, model1B, model2A, model2B, model3B, model4B, model5B, model6B, model7, type = "text")
# Side-by-side comparison of all Log models
stargazer(model1A, model1B, type = "text")
# Side-by-side comparison of all Log models
stargazer(model1A, model1B,model3B, type = "text")
# Side-by-side comparison of all Log models
stargazer( model1B,model3B,model4B, type = "text")
# Side-by-side comparison of all Log models
stargazer( model1B,model3B,model4B,model5B type = "text")
# Side-by-side comparison of all Log models
stargazer( model1B,model3B,model4B,model5B, type = "text")
# Side-by-side comparison of all Log models
stargazer( model1B,model3B,model4B,model5b, type = "text")
model5B <- lm(GII ~ log(GDP_Percapita) + ethnic_fractionalization_score , data = data1)
summary (model5B)
# Side-by-side comparison of all Log models
stargazer( model1B,model3B,model4B,model5b, type = "text")
# Side-by-side comparison of all Log models
stargazer( model1B,model3B,model4B,model5B, type = "text")
# Side-by-side comparison of all Log models
stargazer( model1B,model3B,model4B,model5B,model6b, type = "text")
# Side-by-side comparison of all Log models
stargazer( model1B,model3B,model4B,model5B,model6b,model7, type = "text")
# Side-by-side comparison of all Log models
stargazer( model1B,model3B,model4B,model5B,model6b,model7, type = "text", title = " Regression Comparison")
All
# Side-by-side comparison of all Log models
All <- stargazer( model1B,model3B,model4B,model5B,model6b,model7, type = "text", title = " Regression Comparison")
All
plot(All)
# Side-by-side comparison of all Log models
All <- stargazer( model1B,model3B,model4B,model5B,model6b,model7, type = "text", title = " Regression Comparison")
All
---
title: "My Storyboard at DACSS - tabs"
---
title: "My Storyboard at DACSS "
---
title: "My Storyboard at DACSS "
bibliography : textvisual.bib
bibliography : textviual.bib
---
title: "My Storyboard at DACSS "
bibliography : textviual.bib
```{r setup, include=FALSE}
---
title: "My Storyboard at DACSS "
setwd("C:/Users/LENOVO/Documents/GitHub/690-FinalSubmission")
library(flexdashboard)
readRDS("draft1.rds")
bibliography : textVisual.bib
setwd("C:/Users/LENOVO/Documents/GitHub/690-FinalSubmission")
setwd("C:/Users/LENOVO/Documents/GitHub/690-FinalSubmission")
readRDS("draft1.rds")
rm(list=ls())
df1 <- read.csv("690V Project.csv")
head(df1)
summary(df1)
str(df1)
library(ggplot2)
draft1 <- ggplot(data = df1, aes(x = Industry)) +
geom_bar(fill = "skyblue", color = "black") +  # Customize bar aesthetics
labs(title = "Distribution of Companies by Industry",
x = "Industry",
y = "Count",
caption = "Source : Kaggle" ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
draft1
#dashboard save
saveRDS(draft1,"draft1.rds")
Plot2=ggplot(df1, aes(x = Country, y = Percentage)) +
geom_point(stat = "summary", fun = "mean", fill = "skyblue", color = "black") +
labs(title = "Percentage of Unemployment by Country",
x = "Country",
y = "Percentage of Unemployment",caption = "Source : Kaggle") +
theme_bw()  +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Plot2
saveRDS(Plot2,"Plot2.rds")
Plot3 <- ggplot(df1, aes(x = Industry, y = Percentage)) +
geom_boxplot(fill = "lightblue", color = "blue", alpha = 0.7) +
labs(title = "Distribution of Percentage by Industry",
x = "Industry",
y = "Percentage",caption = "Source : Kaggle") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
Plot3
saveRDS(Plot3,"Plot3.rds")
Plot4 <- ggplot(df1, aes(x = Company_Size_before_Layoffs, y = Money_Raised_in_mil)) +
geom_point(color = "green", size = 3, shape = 16) +  # Customize point aesthetics
labs(title = "Relationship between Company Size Before Layoffs and Money Raised",
x = "Company Size Before Layoffs",
y = "Money Raised (in million)",caption = "Source : Kaggle")
Plot4 <- Plot4 + theme_minimal()
Plot4 <- Plot4 + scale_x_continuous(labels = scales::number_format(scale = 1e-0))
Plot4
saveRDS(Plot4,"Plot4.rds")
Plot5 <- ggplot(df1, aes(x = Company_Size_after_layoffs, y = Money_Raised_in_mil, color = Industry)) +
geom_point(size = 3, shape = 16) +
labs(title = "Relationship between Company Size and Money Raised",
subtitle = "after Layoffs",
x = "Company Size after Layoffs",
y = "Money Raised (in million)",caption = "Source : Kaggle") +
theme_minimal()
Plot5 <- Plot5 + scale_x_continuous(labels = scales::number_format(scale = 1e-0))
Plot5
saveRDS(Plot5,"Plot5.rds")
Plot6 = ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = df1, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry", values = c("Consumer" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude", caption = "Source : Kaggle") +
theme(legend.position = "right")
Plot6
saveRDS(Plot6,"Plot6.rds")
Plot7 = ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = df1, aes(x = lng, y = lat, size = Money_Raised_in_mil, color = Continent), alpha = 0.7) +
scale_size_continuous(name = "Money Raised (in mil)", labels = scales::comma) +
scale_color_manual(name = "Continent", values = c("Asia" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Money Raised by Companies across Continents",
x = "Longitude", y = "Latitude",caption = "Source : Kaggle") +
theme(legend.position = "right")
Plot7
saveRDS(Plot7,"Plot7.rds")
readRDS("draft1.rds")
readRDS("Plot2.rds")
readRDS("Plot3.rds")
readRDS("Plot4.rds")
readRDS("Plot5.rds")
readRDS("Plot6.rds")
readRDS("Plot7.rds")
setwd("C:/Users/LENOVO/Documents/GitHub/690-FinalSubmission")
