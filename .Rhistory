y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
draft1 <- draft1 +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
draft1
draft1 <- ggplot(data = df1, aes(x = Industry)) +
geom_bar(fill = "skyblue", color = "black") +  # Customize bar aesthetics
labs(title = "Distribution of Companies by Industry",
x = "Industry",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
draft1 <- draft1 +
annotate("text", x = Inf, y = -0.1, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
draft1
draft1 <- ggplot(data = df1, aes(x = Industry)) +
geom_bar(fill = "skyblue", color = "black") +  # Customize bar aesthetics
labs(title = "Distribution of Companies by Industry",
x = "Industry",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
draft1 <- draft1 +
annotate("text", x = Inf, y = 0, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
draft1
draft1 <- draft1 +
annotate("text", x = 0, y = 0, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
draft1 <- ggplot(data = df1, aes(x = Industry)) +
geom_bar(fill = "skyblue", color = "black") +  # Customize bar aesthetics
labs(title = "Distribution of Companies by Industry",
x = "Industry",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
draft1 <- draft1 +
annotate("text", x = 0, y = 0, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
draft1
draft1 <- ggplot(data = df1, aes(x = Industry)) +
geom_bar(fill = "skyblue", color = "black") +  # Customize bar aesthetics
labs(title = "Distribution of Companies by Industry",
x = "Industry",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
draft1 <- draft1 +
annotate("text", x = Inf, y = -Inf * (-Inf), hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
draft1
draft1 <- ggplot(data = df1, aes(x = Industry)) +
geom_bar(fill = "skyblue", color = "black") +  # Customize bar aesthetics
labs(title = "Distribution of Companies by Industry",
x = "Industry",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
draft1 <- draft1 +
annotate("text", x = Inf, y = -0.5, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
draft1
draft1 <- ggplot(data = df1, aes(x = Industry)) +
geom_bar(fill = "skyblue", color = "black") +  # Customize bar aesthetics
labs(title = "Distribution of Companies by Industry",
x = "Industry",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
draft1 <- draft1 +
annotate("text", x = Inf, y = -1, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
draft1
draft1 <- ggplot(data = df1, aes(x = Industry)) +
geom_bar(fill = "skyblue", color = "black") +  # Customize bar aesthetics
labs(title = "Distribution of Companies by Industry",
x = "Industry",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
draft1 <- draft1 +
annotate("text", x = Inf, y = -50000, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
draft1
draft1 <- ggplot(data = df1, aes(x = Industry)) +
geom_bar(fill = "skyblue", color = "black") +  # Customize bar aesthetics
labs(title = "Distribution of Companies by Industry",
x = "Industry",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
draft1 <- draft1 +
annotate("text", x = Inf, y = -100, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
draft1
draft1 <- ggplot(data = df1, aes(x = Industry)) +
geom_bar(fill = "skyblue", color = "black") +  # Customize bar aesthetics
labs(title = "Distribution of Companies by Industry",
x = "Industry",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
draft1
draft1 <- draft1 +
annotate("text", x = Inf, y = -100, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
draft1
draft1 <- ggplot(data = df1, aes(x = Industry)) +
geom_bar(fill = "skyblue", color = "black") +  # Customize bar aesthetics
labs(title = "Distribution of Companies by Industry",
x = "Industry",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
draft1 <- draft1 +
annotate("text", x = Inf, y =-0.5, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
draft1
draft1 <- ggplot(data = df1, aes(x = Industry)) +
geom_bar(fill = "skyblue", color = "black") +  # Customize bar aesthetics
labs(title = "Distribution of Companies by Industry",
x = "Industry",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
y_position <- -max(df1$Count) * 0.05  # Adjust multiplier as needed
Plot2=ggplot(df1, aes(x = Country, y = Percentage)) +
geom_point(stat = "summary", fun = "mean", fill = "skyblue", color = "black") +
labs(title = "Percentage of Unemployment by Country",
x = "Country",
y = "Percentage of Unemployment") +
theme_minimal()  +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Plot2 <- Plot2 +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
Plot2
draft1 <- ggplot(data = df1, aes(x = Industry)) +
geom_bar(fill = "skyblue", color = "black") +  # Customize bar aesthetics
labs(title = "Distribution of Companies by Industry",
x = "Industry",
y = "Count",
caption = "Source : Kaggle" ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
draft1
#dashboard save
saveRDS(draft1,"draft1.rds")
Plot2=ggplot(df1, aes(x = Country, y = Percentage)) +
geom_point(stat = "summary", fun = "mean", fill = "skyblue", color = "black") +
labs(title = "Percentage of Unemployment by Country",
x = "Country",
y = "Percentage of Unemployment",caption = "Source : Kaggle") +
theme_minimal()  +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Plot2 <- Plot2 +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
Plot2
saveRDS(Plot2,"Plot2.rds")
Plot3 <- ggplot(df1, aes(x = Industry, y = Percentage)) +
geom_boxplot(fill = "lightblue", color = "blue", alpha = 0.7) +  # Customize boxplot aesthetics
labs(title = "Distribution of Percentage by Industry",
x = "Industry",
y = "Percentage",caption = "Source : Kaggle") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.background = element_rect(fill = "white"))
Plot3
saveRDS(Plot3,"Plot3.rds")
Plot2
Plot2=ggplot(df1, aes(x = Country, y = Percentage)) +
geom_point(stat = "summary", fun = "mean", fill = "skyblue", color = "black") +
labs(title = "Percentage of Unemployment by Country",
x = "Country",
y = "Percentage of Unemployment",caption = "Source : Kaggle") +
theme_classic()  +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Plot2 <- Plot2 +
annotate("text", x = Inf, y = -Inf, hjust = 1, vjust = -1,
label = "Source: Kaggle", parse = TRUE)
Plot2
Plot2=ggplot(df1, aes(x = Country, y = Percentage)) +
geom_point(stat = "summary", fun = "mean", fill = "skyblue", color = "black") +
labs(title = "Percentage of Unemployment by Country",
x = "Country",
y = "Percentage of Unemployment",caption = "Source : Kaggle") +
theme_classic()  +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Plot2
Plot2=ggplot(df1, aes(x = Country, y = Percentage)) +
geom_point(stat = "summary", fun = "mean", fill = "skyblue", color = "black") +
labs(title = "Percentage of Unemployment by Country",
x = "Country",
y = "Percentage of Unemployment",caption = "Source : Kaggle") +
theme_bw()  +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Plot2
saveRDS(Plot2,"Plot2.rds")
Plot4 <- ggplot(df1, aes(x = Company_Size_before_Layoffs, y = Money_Raised_in_mil)) +
geom_point(color = "green", size = 3, shape = 16) +  # Customize point aesthetics
labs(title = "Relationship between Company Size Before Layoffs and Money Raised",
x = "Company Size Before Layoffs",
y = "Money Raised (in million)",caption = "Source : Kaggle")
Plot4 <- Plot4 + theme_minimal()
Plot4 <- Plot4 + scale_x_continuous(labels = scales::number_format(scale = 1e-0))
Plot4
saveRDS(Plot4,"Plot4.rds")
Plot5 <- ggplot(df1, aes(x = Company_Size_after_layoffs, y = Money_Raised_in_mil, color = Industry)) +
geom_point(size = 3, shape = 16) +  # Use shape 16 for circles
labs(title = "Relationship between Company Size and Money Raised",
subtitle = "after Layoffs",  # Adding a subtitle
x = "Company Size after Layoffs",
y = "Money Raised (in million)",caption = "Source : Kaggle") +
theme_minimal()
Plot5 <- Plot5 + scale_x_continuous(labels = scales::number_format(scale = 1e-0))
Plot5
saveRDS(Plot5,"Plot5.rds")
Plot5 <- ggplot(df1, aes(x = Company_Size_after_layoffs, y = Money_Raised_in_mil, color = Industry)) +
geom_point(size = 3, shape = 16) +
labs(title = "Relationship between Company Size and Money Raised",
subtitle = "after Layoffs",
x = "Company Size after Layoffs",
y = "Money Raised (in million)",caption = "Source : Kaggle") +
theme_minimal()
Plot5 <- Plot5 + scale_x_continuous(labels = scales::number_format(scale = 1e-0))
Plot5
saveRDS(Plot5,"Plot5.rds")
Plot6 = ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = df1, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry", values = c("Consumer" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude"caption = "Source : Kaggle") +
Plot6 = ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = df1, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry", values = c("Consumer" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude") +
theme(legend.position = "right")
Plot6
Plot6 = ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = df1, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry", values = c("Consumer" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude", caption = "Source : Kaggle") +
theme(legend.position = "right")
Plot6
Plot7 = ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = df1, aes(x = lng, y = lat, size = Money_Raised_in_mil, color = Continent), alpha = 0.7) +
scale_size_continuous(name = "Money Raised (in mil)", labels = scales::comma) +
scale_color_manual(name = "Continent", values = c("Asia" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Money Raised by Companies across Continents",
x = "Longitude", y = "Latitude",caption = "Source : Kaggle") +
theme(legend.position = "right")
Plot7
saveRDS(Plot7,"Plot7.rds")
saveRDS(Plot6,"Plot6.rds")
saveRDS(Plot5,"Plot5.rds")
saveRDS(Plot4,"Plot4.rds")
saveRDS(Plot3,"Plot3.rds")
saveRDS(Plot2,"Plot2.rds")
#dashboard save
saveRDS(draft1,"draft1.rds")
source("~/690V Project.R")
readRDS("draft1.rds")
readRDS("draft1.rds")
readRDS("Plot2.rds")
readRDS("Plot3.rds")
readRDS("Plot4.rds")
readRDS("Plot5.rds")
readRDS("Plot6.rds")
readRDS("Plot7.rds")
library(sf)
link="https://github.com/DACSS-Visual/SpatialData/raw/main/maps/wazipMap.gpkg"
zipMap=sf::read_sf(link, layer='zips')
# see some rows
head(zipMap)
link="https://github.com/DACSS-Visual/SpatialData/raw/main/maps/wazipMap.gpkg"
zipMap=sf::read_sf(link, layer='zips')
# see some rows
head(zipMap)
# see some rows
head(zipMap)
zipmap
zipMap <- read.csv("C:\\Users\\LENOVO\\Downloads\\690V Project.csv")
head(zipMap)
base=ggplot(data = zipMap)
base + geom_sf()
library(ggplot2)
base=ggplot(data = zipMap)
base + geom_sf()
library(sf)
base=ggplot(data = zipMap)
base + geom_sf()
zipMap_sf <- st_as_sf(zipMap, coords = c("lng", "lat"), crs = 4326)
base=ggplot(data = zipMap)
base + geom_sf()
zipMap_sf <- st_as_sf(zipMap, coords = c("zipmap$lng", "zipmap$lat"), crs = 4326)
zipMap_sf <- st_as_sf(zipMap, coords = c(zipmap$lng, zipmap$lat), crs = 4326)
zipMap_sf <- st_as_sf(zipMap, coords = c(lng, lat), crs = 4326)
library(ggplot2)
base=ggplot(data = zipMap)
zipMap_sf <- st_as_sf(zipMap, coords = c("lng", "lat"), crs = 4326)
base + geom_sf()
base + geom_sf(aes(fill=Industry))
link="https://github.com/DACSS-Visual/SpatialData/raw/main/maps/wazipMap.gpkg"
zipMap=sf::read_sf(link, layer='zips')
head(zipMap)
base + geom_sf()
base=ggplot(data = zipMap)
base + geom_sf()
link="https://github.com/Shravan-Sundar14/690-FinalSubmission/blob/main/690V_Project.gpkg"
zipMap=sf::read_sf(link, layer='zips')
link="https://github.com/Shravan-Sundar14/690-FinalSubmission/690V_Project.gpkg"
zipMap=sf::read_sf(link, layer='zips')
link="https://github.com//Shravan-Sundar14//690-FinalSubmission//690V_Project.gpkg"
zipMap=sf::read_sf(link, layer='zips')
link="https://github.com/Shravan-Sundar14/690-FinalSubmission/blob/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg"
zipMap=sf::read_sf(link, layer='zips')
library(sf)
link="https://github.com/Shravan-Sundar14/690-FinalSubmission/blob/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg"
zipMap=sf::read_sf(https://github.com/Shravan-Sundar14/690-FinalSubmission/raw/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg, layer='zips')
library(sf)
link="https://github.com/Shravan-Sundar14/690-FinalSubmission/blob/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg"
zipMap=sf::read_sf("https://github.com/Shravan-Sundar14/690-FinalSubmission/raw/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg", layer='zips')
gpkg_layers <- st_layers("https://github.com/Shravan-Sundar14/690-FinalSubmission/raw/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg")
# Print the available layers
gpkg_layers
library(sf)
link="https://github.com/Shravan-Sundar14/690-FinalSubmission/blob/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg"
zipMap=sf::read_sf("https://github.com/Shravan-Sundar14/690-FinalSubmission/raw/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg", layer='690v_Project')
head(zipMap)
library(ggplot2)
base=ggplot(data = zipMap)
base + geom_sf()
map_plot <- ggplot(zipMap, aes(x = longitude_column, y = latitude_column)) +
geom_point(color = "blue") +
labs(title = "Layoffs by Location") +
theme_minimal()
map_plot
base
base + geom_sf()
base=ggplot(data = zipMap)
library(sf)
link="https://github.com/Shravan-Sundar14/690-FinalSubmission/blob/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg"
zipMap=sf::read_sf("https://github.com/Shravan-Sundar14/690-FinalSubmission/raw/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg", layer='690v_Project')
head(zipMap)
library(ggplot2)
base=ggplot(data = zipMap)
base + geom_sf()
base
map_plot <- ggplot(zipMap, aes(x = lng, y = lat)) +
geom_point(color = "blue") +
labs(title = "Layoffs by Location") +
theme_minimal()
map_plot
base=ggplot(data = zipMap)
base = base + geom_sf()
base
library(sf)
library(ggplot2)
library(rnaturalearth)
# Load world map data
world <- ne_countries(scale = "medium", returnclass = "sf")
link="https://github.com/Shravan-Sundar14/690-FinalSubmission/blob/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg"
zipMap=sf::read_sf("https://github.com/Shravan-Sundar14/690-FinalSubmission/raw/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg", layer='690v_Project')
head(zipMap)
library(ggplot2)
base=ggplot(data = zipMap)
base = base + geom_sf()
base
map_plot <- ggplot(zipMap, aes(x = lng, y = lat)) +
geom_point(color = "blue") +
labs(title = "Layoffs by Location") +
theme_minimal()
map_plot
library(sf)
library(ggplot2)
library(rnaturalearth)
# Load world map data
world <- ne_countries(scale = "medium", returnclass = "sf")
link="https://github.com/Shravan-Sundar14/690-FinalSubmission/blob/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg"
zipMap=sf::read_sf("https://github.com/Shravan-Sundar14/690-FinalSubmission/raw/c776ffcf5539f17b554a89c5d6c6e4c28b258083/690V_Project.gpkg", layer='690v_Project')
head(zipMap)
library(ggplot2)
base=ggplot(data = zipMap)
base = base + geom_sf()
base
map_plot <- ggplot(zipMap, aes(x = lng, y = lat)) +borders("world", colour = "gray50", fill = "gray50")+
geom_point(color = "blue") +
labs(title = "Layoffs by Location") +
theme_minimal()
map_plot
map_plot <- ggplot(zipMap, aes(x = lng, y = lat,size = Laid_Off, color = Industry) ,alpha = 0.7) + borders("world", colour = "gray50", fill = "gray50")+
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry", values = c("Consumer" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude", caption = "Source : Kaggle") +
theme(legend.position = "right")
map_plot
map_plot <- ggplot(zipMap, aes(x = lng, y = lat,size = Laid_Off, color = Industry) ,alpha = 0.7) + borders("world", colour = "gray50", fill = "gray50")+
geom_point(color = "blue") +
labs(title = "Layoffs by Location") +
theme_minimal()
map_plot
map_plot <- ggplot(zipMap, aes(x = lng, y = lat,) ,alpha = 0.7) + borders("world", colour = "gray50", fill = "gray50")+
geom_point(color = "blue") +
labs(title = "Layoffs by Location") +
theme_minimal()
map_plot
mapplot <- ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = zipMap, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry", values = industry_colors) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude", caption = "Source: Kaggle") +
theme(legend.position = "right")
mapplot <- ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = zipMap, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry") +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude", caption = "Source: Kaggle") +
theme(legend.position = "right")
mapplot
mapplot <- ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = zipMap, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry",values = c("Consumer" = "blue", "Other" = "green") +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude", caption = "Source: Kaggle") +
theme(legend.position = "right")
mapplot
mapplot <- ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = zipMap, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry", values = c("Consumer" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude", caption = "Source: Kaggle") +
theme(legend.position = "right")
mapplot
mapplot <- ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = zipMap, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma)  +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude", caption = "Source: Kaggle") +
theme(legend.position = "right")
mapplot
mapplot <- ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = zipMap, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma)  +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude", caption = "Source: Kaggle") +
theme_minimal(legend.position = "right")
mapplot <- ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = zipMap, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma)  +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude", caption = "Source: Kaggle")
mapplot
Plot6
Plot6 = ggplot() +
borders("world", colour = "gray50", fill = "gray50") +
geom_point(data = df1, aes(x = lng, y = lat, size = Laid_Off, color = Industry), alpha = 0.7) +
scale_size_continuous(name = "Laid Off", labels = scales::comma) +
scale_color_manual(name = "Industry", values = c("Consumer" = "blue", "Other" = "green")) +
labs(title = "Map Plot of Company Headquarters",
subtitle = "Laid Off Employees by Industry",
x = "Longitude", y = "Latitude", caption = "Source : Kaggle") +
theme(legend.position = "right")
Plot6
df1 <- read.csv("690V Project.csv")
setwd("C:/Users/LENOVO/Documents/GitHub/690-FinalSubmission")
df1 <- read.csv("690V Project.csv")
rm(list=ls())
df1 <- read.csv("690V Project.csv")
---
title: "My Storyboard at DACSS - tabs"
---
title: "My Storyboard at DACSS - tabs"
---
title: "My Storyboard at DACSS - tabs"
---
title: "My Storyboard at DACSS - tabs"
